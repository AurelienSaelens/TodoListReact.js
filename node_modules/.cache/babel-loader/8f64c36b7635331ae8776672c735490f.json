{"ast":null,"code":"var _jsxFileName = \"/Users/aureliensaelens/Desktop/TodoListReact.js/src/components/TaskItem.js\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default class TaskItem extends Component {\n  constructor(props) {\n    super(props);\n\n    this.setEditingState = isEditing => {\n      this.setState({\n        isEditing: isEditing\n      });\n    };\n\n    this.toggleTask = () => {\n      this.props.toggleTask(this.props.id);\n    };\n\n    this.deleteTask = () => {\n      this.props.deleteTask(this.props.id);\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        task: event.target.value\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      this.props.editTask(this.props.id, this.state.task);\n      this.setState({\n        isEditing: false\n      });\n    };\n\n    this.state = {\n      task: this.props.taskItem.task,\n      isEditing: false\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: this.state.isEditing ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: this.handleSubmit,\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              value: this.state.task,\n              onChange: this.handleChange,\n              autoFocus: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"save\",\n            onClick: this.handleSubmit,\n            type: \"submit\",\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"back\",\n            onClick: () => this.setEditingState(false),\n            type: \"button\",\n            children: \"Back\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          className: \"task\",\n          onClick: this.toggleTask,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            readOnly: true,\n            checked: this.props.taskItem.isCompleted\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: this.props.taskItem.isCompleted ? 'completed' : 'not-completed',\n            children: this.props.taskItem.task\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"edit\",\n            onClick: () => this.setEditingState(true),\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"delete\",\n            onClick: this.deleteTask,\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/aureliensaelens/Desktop/TodoListReact.js/src/components/TaskItem.js"],"names":["React","Component","TaskItem","constructor","props","setEditingState","isEditing","setState","toggleTask","id","deleteTask","handleChange","event","task","target","value","handleSubmit","preventDefault","editTask","state","taskItem","render","isCompleted"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nexport default class TaskItem extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      task: this.props.taskItem.task,\n      isEditing: false,\n    };\n  }\n  setEditingState = (isEditing) => {\n    this.setState({ isEditing: isEditing });\n  };\n  toggleTask = () => {\n    this.props.toggleTask(this.props.id);\n  };\n  deleteTask = () => {\n    this.props.deleteTask(this.props.id);\n  };\n  handleChange = (event) => {\n    this.setState({ task: event.target.value });\n  };\n  handleSubmit = (event) => {\n    event.preventDefault();\n    this.props.editTask(this.props.id, this.state.task);\n    this.setState({ isEditing: false });\n  };\n  render() {\n    return (\n      <tr>\n        {this.state.isEditing ? (\n          <>\n            <td>\n              <form onSubmit={this.handleSubmit}>\n                <input\n                  value={this.state.task}\n                  onChange={this.handleChange}\n                  autoFocus\n                />\n              </form>\n            </td>\n            <td>\n              <button\n                className=\"save\"\n                onClick={this.handleSubmit}\n                type=\"submit\"\n              >\n                Save\n              </button>\n              <button\n                className=\"back\"\n                onClick={() => this.setEditingState(false)}\n                type=\"button\"\n              >\n                Back\n              </button>\n            </td>\n          </>\n        ) : (\n          <>\n            <td className=\"task\" onClick={this.toggleTask}>\n              <input\n                type=\"checkbox\"\n                readOnly\n                checked={this.props.taskItem.isCompleted}\n              />\n              <span\n                className={\n                  this.props.taskItem.isCompleted\n                    ? 'completed'\n                    : 'not-completed'\n                }\n              >\n                {this.props.taskItem.task}\n              </span>\n            </td>\n            <td>\n              <button\n                className=\"edit\"\n                onClick={() => this.setEditingState(true)}\n              >\n                Edit\n              </button>\n              <button className=\"delete\" onClick={this.deleteTask}>\n                Delete\n              </button>\n            </td>\n          </>\n        )}\n      </tr>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}