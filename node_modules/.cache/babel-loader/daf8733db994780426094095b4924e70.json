{"ast":null,"code":"var _jsxFileName = \"/Users/aureliensaelens/Desktop/TodoListReact.js/src/components/Main.js\";\nimport React from 'react';\nimport CreateTask from './CreateTask';\nimport TaskList from './TaskList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst tasks = localStorage.getItem('tasks') ? JSON.parse(localStorage.getItem('tasks')) : [];\nexport default class Main extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.createTask = task => {\n      if (task.trim() === '') {\n        alert(\"Task can't be empty\");\n        return;\n      }\n\n      tasks.push({\n        task,\n        isCompleted: false\n      });\n      this.setState({\n        tasks: tasks\n      });\n      localStorage.setItem('tasks', JSON.stringify(tasks));\n    };\n\n    this.toggleTask = taskId => {\n      const taskItem = tasks[taskId];\n      taskItem.isCompleted = !taskItem.isCompleted;\n      this.setState({\n        tasks: tasks\n      });\n      localStorage.setItem('tasks', JSON.stringify(tasks));\n    };\n\n    this.deleteTask = taskId => {\n      tasks.splice(taskId, 1);\n      this.setState({\n        tasks: tasks\n      });\n      localStorage.setItem('tasks', JSON.stringify(tasks));\n    };\n\n    this.editTask = (taskId, task) => {\n      const taskItem = tasks[taskId];\n      taskItem.task = task;\n      this.setState({\n        tasks: tasks\n      });\n      localStorage.setItem('tasks', JSON.stringify(tasks));\n    };\n\n    this.state = {\n      tasks: tasks\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Todos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: [/*#__PURE__*/_jsxDEV(CreateTask, {\n          createTask: this.createTask\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n          tasks: this.state.tasks,\n          deleteTask: this.deleteTask,\n          editTask: this.editTask,\n          toggleTask: this.toggleTask\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/aureliensaelens/Desktop/TodoListReact.js/src/components/Main.js"],"names":["React","CreateTask","TaskList","tasks","localStorage","getItem","JSON","parse","Main","Component","constructor","props","createTask","task","trim","alert","push","isCompleted","setState","setItem","stringify","toggleTask","taskId","taskItem","deleteTask","splice","editTask","state","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport CreateTask from './CreateTask';\nimport TaskList from './TaskList';\n\nconst tasks = localStorage.getItem('tasks')\n  ? JSON.parse(localStorage.getItem('tasks'))\n  : [];\nexport default class Main extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tasks: tasks,\n    };\n  }\n  createTask = (task) => {\n    if (task.trim() === '') {\n      alert(\"Task can't be empty\");\n      return;\n    }\n    tasks.push({ task, isCompleted: false });\n    this.setState({ tasks: tasks });\n    localStorage.setItem('tasks', JSON.stringify(tasks));\n  };\n  toggleTask = (taskId) => {\n    const taskItem = tasks[taskId];\n    taskItem.isCompleted = !taskItem.isCompleted;\n    this.setState({ tasks: tasks });\n    localStorage.setItem('tasks', JSON.stringify(tasks));\n  };\n  deleteTask = (taskId) => {\n    tasks.splice(taskId, 1);\n    this.setState({ tasks: tasks });\n    localStorage.setItem('tasks', JSON.stringify(tasks));\n  };\n  editTask = (taskId, task) => {\n    const taskItem = tasks[taskId];\n    taskItem.task = task;\n    this.setState({ tasks: tasks });\n    localStorage.setItem('tasks', JSON.stringify(tasks));\n  };\n  render() {\n    return (\n      <div className=\"main\">\n        <h1>Todos</h1>\n        <div className=\"content\">\n          <CreateTask createTask={this.createTask} />\n          <br />\n          <TaskList\n            tasks={this.state.tasks}\n            deleteTask={this.deleteTask}\n            editTask={this.editTask}\n            toggleTask={this.toggleTask}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}